{
  "env": {
    "es6": true,
    "es2020": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:promise/recommended",
    "plugin:sonarjs/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "tsconfigRootDir": ".",
    "ecmaVersion": 2020,
    "lib": ["es2020"],
    "createDefaultProgram": false
  },
  "plugins": [
    "promise",
    "optimize-regex",
    "sonarjs",
    "@typescript-eslint",
    "simple-import-sort"
  ],
  "rules": {
    "no-undef": "off",
    "max-len": [
      "error",
      {
        "code": 80,
        "tabWidth": 2,
        "ignoreUrls": true,
        "ignoreTemplateLiterals": true,
        "comments": 65
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "react/prop-types": "off",
    "promise/always-return": "warn",
    "no-console": ["error", { "allow": ["warn", "error", "log"] }],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          ["graphql",
            "bcrypt",
            "jsonwebtoken",
            "apollo-server-express",
            "cookie-parser",
            "express",
            "pg",
            "^\\u0000"],
          // folders in src
          ["src", "^types|^auth"],
          ["up deps", "../"],
          ["down deps", "./"]
        ]
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "prefer-const": "error",
    "no-shadow": ["warn", { "builtinGlobals": true }],
    "no-unused-vars": ["error", {"argsIgnorePattern": "^_"}],
    "no-duplicate-imports": ["error", { "includeExports": true }],
    // eslint
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ExportDefaultDeclaration",
        "message": "Prefer named exports"
      }
    ],
    "prefer-destructuring": [
      "warn",
      {
        "VariableDeclarator": {
          "array": true,
          "object": true
        },
        "AssignmentExpression": {
          "array": true,
          "object": true
        }
      },
      {
        "enforceForRenamedProperties": true
      }
    ],

    // typescript
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "warn",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        "ignoreNumericLiteralTypes": true,
        "ignoreEnums": true,
        "enforceConst": true,
        "ignoreReadonlyClassProperties": true,
        "ignore": [-1, 0, 1, 2]
      }
    ],
    "object-curly-spacing": [
      "error",
      "always",
      {
        "arraysInObjects": false,
        "objectsInObjects": false
      }
    ],
    "array-bracket-spacing": [
      "error",
      "always",
      {
        "singleValue": false,
        "objectsInArrays": false
      }
    ],
    "key-spacing": [
      "error",
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ]
  },
  "overrides": [
    {
      // enable the rule specifically for TypeScript files
      "files": ["*.ts"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": ["warn", { "allowExpressions": true }]
      }
    }
  ]
}
